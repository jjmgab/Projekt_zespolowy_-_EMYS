 
 
   //////////////////////////////////////////////////////////////// 
  //
  //    P O L I S H
  //
  ////////////////////////////////////////////////////////////////
  //
  // Polish UTF-8 chars - just for quick reference
  //
  // a	\xc4\x85   	A  \xc4\x84
  // c	\xc4\x87   	C  \xc4\x86
  // e	\xc4\x99	E  \xc4\x98
  // l	\xc5\x82 	L  \xc5\x81
  // n	\xc5\x84 	N  \xc5\x83
  // o	\xc3\xb3	O  \xc3\x93
  // s	\xc5\x9b	S  \xc5\x9a
  // z,	\xc5\xba	Z, \xc5\xb9
  // z.	\xc5\xbc	Z. \xc5\xbb
  
  
  
 
do(Global) {

  if (!robot.hasLocalSlot("competency")) robot.addComponent("competency");
  
   
 
  do (robot.competency) {
  
    function cActAlive(vision_config) 		{call.a_RAlive(vision_config);};
    function cAskYesNo(question) 		{call.d_AskYesNo(question);};
    function cAskForBasic(question)		{call.d_AskForBasic(question);};
    function cTakePhoto() 			{call.b_RTakePhoto();};
    function cWaitForCall()			{call.d_WaitForCall();};
  };
    
    
 /* 
  function a_RAlive(_config){
  
    var _error = false;
    
    if (!robot.hasLocalSlot("audio")) {
      echo("ERROR: No audio component in the robot structure!");
      _error = true;
    };
    if (!robot.hasLocalSlot("video")) {
      echo("ERROR: No video component in the robot structure!");
      _error = true;
    };
    
    if (_error) return;
    
    if (!robot.audio.hasLocalSlot("detector")) {
      echo("ERROR: No audio detector component in the robot structure!");
      _error = true;
    };
        
    if (!robot.video.hasLocalSlot("moveDetector")) {
      echo("ERROR: No video move detector component in the robot structure!");
      _error = true;
    };
    
    if (_error) return;
    
    if (!hasSlot("t_follow7")) var Global.t_follow7=Tag.new() else { t_follow7.unfreeze| t_follow7.stop; };
    if (!hasSlot("t_follow7A")) var Global.t_follow7A=Tag.new() else { t_follow7A.unfreeze| t_follow7A.stop; };
    if (!hasSlot("t_follow7B")) var Global.t_follow7B=Tag.new() else { t_follow7B.unfreeze| t_follow7B.stop; };
    if (!hasSlot("t_follow7C")) var Global.t_follow7C=Tag.new() else { t_follow7C.unfreeze| t_follow7C.stop; };
    
    t_follow7:{
      ///////////////////////////////////////////////////
      if (_config){

	// disable not used detectors
	if (robot.video.hasLocalSlot("objectDetector")) 
	  robot.video.objectDetector.enable=false;
	if (robot.video.hasLocalSlot("color1Detector"))  {
	  robot.video.color1Detector.enable=false;
	  robot.video.color2Detector.enable=false;
	  robot.video.color3Detector.enable=false;
	  robot.video.color4Detector.enable=false;
	};
	if (robot.video.hasLocalSlot("facetDetector")) 	
	  robot.video.facetDetector.enable=false; 	
	
	// enable used detectors
	robot.video.moveDetector.enable=true;
	robot.video.humanDetector.enable=true;
	robot.video.humanDetector.faceTrackingPause=false;
	
      },
      ///////////////////////////////////////////////////
    

      robot.body.neck.head.ExpNormal(1);
      robot.body.neck.head.ActBlinking(100,2),
      robot.body.neck.head.ActBreath(8,3),

      
      t_follow7A: {  
	a_RFollowPerson(false),
	
	at (robot.video.humanDetector.visible~1) 
	{
	  echo("SEE PERSON");
	  t_follow7B.freeze;
	  t_follow7C.freeze;
	  if (robot.video.hasLocalSlot("moveDetector")) robot.video.moveDetector.enable=false;
	},
	at (!robot.video.humanDetector.visible~1) 
	{
	  if (robot.video.hasLocalSlot("moveDetector")) robot.video.moveDetector.enable=true;
	  t_follow7B.unfreeze;
	};
      },
      
      t_follow7B: {
	a_RBackgroundReaction(false),
	
	at (((robot.video.moveDetector.visible)||(robot.audio.detector.sourceConfidence>0.5))) 
	{
	  t_follow7C.freeze;	
	},
	
	at (((!robot.video.moveDetector.visible)&&(!(robot.audio.detector.sourceConfidence>0.5)))~1) 
	{
	  t_follow7C.unfreeze;
	};
	
      },
      
      t_follow7C: {
	  robot.body.neck.head.ActAround(6,5,3),
      },
    }, // t_follow6:
  };
  */
 
  /*
  function a_RBackgroundReaction(_config){
    
  
    var _error = false;
    
    if (!robot.hasLocalSlot("audio")) {
      echo("ERROR: No audio component in the robot structure!");
      _error = true;
    };
    if (!robot.hasLocalSlot("video")) {
      echo("ERROR: No video component in the robot structure!");
      _error = true;
    };
    
    if (_error) return;
    
    if (!robot.audio.hasLocalSlot("detector")) {
      echo("ERROR: No audio detector component in the robot structure!");
      _error = true;
    };
        
    if (!robot.video.hasLocalSlot("moveDetector")) {
      echo("ERROR: No video move detector component in the robot structure!");
      _error = true;
    };
    
    if (_error) return;
    
    if (!hasSlot("t_follow6")) var Global.t_follow6=Tag.new() else { t_follow6.unfreeze| t_follow6.stop; };
    
    t_follow6:{
      ///////////////////////////////////////////////////
      if (_config){

	// disable not used detectors
	if (robot.video.hasLocalSlot("objectDetector")) 
	  robot.video.objectDetector.enable=false;
	if (robot.video.hasLocalSlot("color1Detector"))  {
	  robot.video.color1Detector.enable=false;
	  robot.video.color2Detector.enable=false;
	  robot.video.color3Detector.enable=false;
	  robot.video.color4Detector.enable=false;
	};
	if (robot.video.hasLocalSlot("facetDetector")) 	
	  robot.video.facetDetector.enable=false;
	robot.video.humanDetector.enable=false;
	robot.video.humanDetector.faceTrackingPause=true;
	
	// enable used detectors
	if (robot.video.hasLocalSlot("moveDetector")) 	
	  robot.video.moveDetector.enable=true;
      },
      ///////////////////////////////////////////////////
	loop {
	  if (robot.video.moveDetector.visible) {
	    var tmp_Yaw   = robot.video.moveDetector.x*robot.video.moveDetector.scale/11 + _Kinect_Offset[3] |
	    var tmp_Pitch = robot.video.moveDetector.y*robot.video.moveDetector.scale/11 + _Kinect_Offset[4] ;
	    robot.body.neck.head.MoveAtSpeed(tmp_Yaw,tmp_Pitch-10,50);
	  
	    
	  } else if (robot.audio.detector.sourceConfidence>0.5) {
	    var tmp_Pitch = 5.random|
	    var tmp_Yaw   = robot.audio.detector.sourceAngle + _Kinect_Offset[3] ;
	    robot.body.neck.head.MoveAt(tmp_Yaw,tmp_Pitch,1);
	
	    sleep(1);
	  };
	  sleep(30ms);
	},
      ///////////////////////////////////////////////////
    }, // t_follow6:
  };
  */
  
  
  /*
  function a_RFollowPerson(_config){
  
    var _error = false;
    
    if (!robot.hasLocalSlot("video")) {
      echo("ERROR: No video component in the robot structure!");
      _error = true;
    };
    
    if (_error) return;
        
    if (!robot.video.hasLocalSlot("humanDetector")) {
      echo("ERROR: No video human detector component in the robot structure!");
      _error = true;
    };
    
    if (_error) return;
    
    if (!hasSlot("t_follow5")) var Global.t_follow5=Tag.new() else { t_follow5.unfreeze| t_follow5.stop; };
    
    t_follow5:{
      ///////////////////////////////////////////////////
      if (_config){

	// disable not used detectors
	if (robot.video.hasLocalSlot("objectDetector")) 
	  robot.video.objectDetector.enable=false;
	if (robot.video.hasLocalSlot("color1Detector"))  {
	  robot.video.color1Detector.enable=false;
	  robot.video.color2Detector.enable=false;
	  robot.video.color3Detector.enable=false;
	  robot.video.color4Detector.enable=false;
	};
	if (robot.video.hasLocalSlot("facetDetector")) 	
	  robot.video.facetDetector.enable=false;
	if (robot.video.hasLocalSlot("moveDetector")) 	
	  robot.video.moveDetector.enable=false;
	
	// enable used detectors
	robot.video.humanDetector.enable=true;
	robot.video.humanDetector.faceTrackingPause=false;
      },
      ///////////////////////////////////////////////////
      loop {
	if (robot.video.humanDetector.head.visible) {
	 
	  robot.body.neck.head.MoveAtSpeed(robot.video.humanDetector.head.orientation[0],robot.video.humanDetector.head.orientation[1]-4,55),
	  //robot.body.neck.head.MoveAt(robot.video.humanDetector.head.orientation[0],robot.video.humanDetector.head.orientation[1]-5,0.5),
	
	},
	sleep(30ms);
	//sleep(500ms);
      },
      /////////////////////////////////////////////////// 
    }, // t_follow:
  };
  */
  
  
  function d_AskYesNo(question) {
    robot.audio.recognition.pause = true;
    robot.audio.recognition.resultTag="";
    robot.audio.recognition.result="";
    robot.audio.recognition.ResetGrammar;
    //
    robot.audio.recognition.LoadGrammar(_uFilesDir+"grammars/YesNoPL.grxml"); 
    // 
    robot.body.neck.head.Say(question, 4, 0);
    robot.audio.recognition.pause = false;

    at ((robot.audio.recognition.resultTag!="")&&(robot.audio.recognition.resultTag!="REPEAT"))
    {
      robot.audio.recognition.pause = true;
      robot.audio.player.Play(_uFilesDir+"sounds/samples/heard_sound.mp3");
      return robot.audio.recognition.resultTag;
    },
    

    // REPEAT
    at (robot.audio.recognition.resultTag=="REPEAT")
    {
      robot.audio.recognition.pause = true;
      robot.audio.player.Play(_uFilesDir+"sounds/samples/heard_sound.mp3");
      robot.body.neck.head.Say(question, 4, 0);
      robot.audio.recognition.resultTag = "";
      robot.audio.recognition.result="";
      robot.audio.recognition.pause = false;
    },
    ///////////////////////////////////////////
    var rec_timeout = 0;
    every(1s) rec_timeout++,
    waituntil (rec_timeout > 10)|
    robot.audio.recognition.pause = true|
    robot.audio.player.Play(_uFilesDir+"sounds/samples/down_double_beep.mp3");
    return "TIMEOUT";
  };
  
  
  function d_AskForBasic(question){
    robot.audio.recognition.pause = true;
    robot.audio.recognition.resultTag="";
    robot.audio.recognition.result="";
    robot.audio.recognition.ResetGrammar;
    //
    robot.audio.recognition.LoadGrammar(_uFilesDir+"grammars/BasicPL.grxml"); 
    // 
    robot.body.neck.head.Say(question, 4, 0);

    robot.audio.recognition.pause = false;
    
    
    at((robot.audio.recognition.resultTag!="")){
      robot.audio.recognition.pause = true;
      robot.audio.player.Play(_uFilesDir+"sounds/samples/heard_sound.mp3");
      return robot.audio.recognition.resultTag;
    },
  
    var rec_timeout = 0;
    every(1s) rec_timeout++,
    waituntil (rec_timeout > 10)|
    robot.audio.recognition.pause = true|
    return "NOTHING";
  };
  
  function d_WaitForCall(){
    echo("Jestem");
    robot.audio.recognition.pause = true;
    robot.audio.recognition.resultTag="";
    robot.audio.recognition.result="";
    robot.audio.recognition.ResetGrammar;  
    //
    robot.audio.recognition.LoadGrammar(_uFilesDir+"grammars/BasicPL.grxml"); 
    // 
    echo("true");
    robot.audio.recognition.pause = false;
    echo("false");
    at (robot.audio.recognition.resultTag=="HELLO")
    {
      echo("uslyszalem");
      robot.audio.recognition.pause = true;
      robot.audio.player.Play(_uFilesDir+"sounds/samples/heard_sound.mp3");
      return true;
    },

    var rec_timeout = 0;
    every(1s) rec_timeout++,
    waituntil (rec_timeout > 10)|
    robot.audio.recognition.pause = true|
    robot.audio.player.Play(_uFilesDir+"sounds/samples/down_double_beep.mp3");

    return false;
  };
/*
  function b_RTakePhoto(){
      
    
    var _error = false;
    if (!robot.hasLocalSlot("audio")) {
      echo("ERROR: No audio component in the robot structure!");
      _error = true;
    };
    if (!robot.hasLocalSlot("video")) {
      echo("ERROR: No video component in the robot structure!");
      _error = true;
    };
    
    if (_error) return;
    
    if (!robot.video.hasLocalSlot("photo")) {
      echo("ERROR: No photo component in the robot structure!");
      _error = true;
    };
    
    if (!robot.audio.hasLocalSlot("player")) {
      echo("ERROR: No player component in the robot structure!");
      _error = true;
    };
    
    if (_error) return;
    
    robot.audio.player.Play(_uFilesDir+"sounds/samples/shutter.wav"),
    robot.video.photo.Take("kinect");
    robot.screen.CreateBlack();
    robot.screen.ScaleImage(robot.video.photo.image,0.5,0.5,1,0.5);
  };
 */
  



  echo("OK: EMYS behaviours added.");

};