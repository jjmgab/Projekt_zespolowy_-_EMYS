/*
* CONFIG file
*
*  Author: Jan Kedzierski
*  Date: 04.04.2018
*  Ver: 19.0
*
*
 "I can assemble anything that enters my head, but on the other hand not everything enters it."
  Microx "Robots' Fables" by S. Lem
*
*/

do (Global) {

  ////////////////////////////////////////////////////////
  //
  //	R O B O T   S T R U C T U R E
  //
  ////////////////////////////////////////////////////////
  // Robot structure.
  // Possible elements: "Audio","Video","ML","Network",
  //                    "Appraisal","Emotions","Remote"
  //			"Platform","Arms","Hands","Emys"
  //			"IO", "Screen"
  //
  var _RobotStructure =["Audio","Video","Emys","IO","Screen"];
  // 
  ////////////////////////////////////////////////////////
  //
  //	A U D I O   C O N F I G U R A T I O N
  //
  ////////////////////////////////////////////////////////
  // ENABLE MODULES
  var _En_UPlayer	 	= false;	// simple wav file player
  var _En_UPlayerNext		= true;		// advanced audio player/recorder
  var _En_USpeech	 	= true;		// speech synthesis (MSP or SAPI)
  var _En_URecog	 	= false;	// speech recognition (MSP or SAPI)
  var _En_UKinectAudio		= true;		// enable kinect device auditory features 
						// (sound recording, voice detection, speech recognition)
  var _En_UTextToolAudio	= false; 	// enable text tool module, internal use
						// (it helps to get rid of text encoding mess, eg. Text-to-Speech input)
  var _En_UMP3			= false; 	// enable mp3 converter
  //////////////////////////////////////////////////////
  // SPEECH SYNTHESIS SETTINGS
  // Choose speech synthesies parameters
  var _Speech_module		= "USpeech_SAPI";// Possible speech synthesis modules:		"USpeech_MSP", "USpeech_SAPI"
  var _Speech_volume		= 100;		// Set the speech volume
  var _Speech_param		= [3,6];   
						// For now [EN, PL, PT]
						// Choose proper voises from all available voices 
						// use -> robot.audio.speech.availableVoices;
   //
   ////////////////////////////////////////////////////
   // SPEECH RECOGNITION SETTINGS
   // choose sound recorder module
  var _Recog_module		= "UKinect";	// Possible speech recognition modules:		"UKinect", "URecog_MSP", "URecog_SAPI"
  var _Recog_param		= 0;		// Set recognizer from all available recognizers (languages)
						// use -> robot.audio.recognition.availableRecognizers; 
  var _Recog_input		= 0;		// Set audio input,
						// use -> robot.audio.recognition.availableInputs;
  //						// !! ONLY WITH "URecog_MSP", "URecog_SAPI" !!
  //
   //
   ////////////////////////////////////////////////////
   // AUDIO PLAYER/RECORDER SETTINGS
   // choose sound recorder module
  var _Record_module		= "UPlayerNext";// Possible record modules:	"UKinect", "UPlayerNext"
  // Choose sound player module
  var _Player_module		= "UPlayerNext";// Possible player modules:	"UPlayer", "UPlayerNext"
  // Set all audio inputs/outputs levels - available with UPlayerNext module only
  var _PlayerNext_MasterVolume		= 100;	// Master playback volume in %
  var _PlayerNext_PlayerVolume		= 60;	// Universal player volume in %
  var _PlayerNext_MusicPlayerVolume	= 15;	// Music player volume in %
  var _PlayerNext_MicRecordLevel	= 30;	// Microphone input level in %
  var _PlayerNext_KinectRecordLevel	= 80;	// Kinect mic array input level in%
  //
  ////////////////////////////////////////////////////////
  //
  //	V I D E O   C O N F I G U R A T I O N
  //
  ////////////////////////////////////////////////////////
  // ENABLE MODULES
  var _En_UCamera		= false;	// camera device (set flip image below if necessary) 
  var _En_UKinectVideo		= true; 	// kinect device and all provided features: skeleton, face, audio, speech...
  var _En_UObjectDetector 	= false;	// object (face) detector, set image source below
  var _En_UColorDetector 	= false;	// color detector, set image source below
  var _En_UMoveDetector 	= true;		// move detector, set image source below
  var _En_UFacet		= false;	// face features detector, set image source below
  var _En_UImageTool		= true;		// image tools, internal use (scaling, drawing, croping, etc.)
  //
  ////////////////////////////////////////////////////////
  // CAMERA SETTINGS
  var _Camera_flip			= 0; 	  // flip device (image)
						  // Possible options: 0 - 0 deg, 1 - 90 deg, 2 - 180 deg, 3 - 270 deg
  var _Camera_index			= 0; 	  // set number of choosen camera (0 - integrated if you have one, 1 - robot one,...)
  //
  ////////////////////////////////////////////////////////
  // KINECT SETTINGS
  var _Kinect_Offset			= [0,-0.25,0,0,20];
							// [x,y,z,yaw,pitch] - kinect offest to the eyes in [m,deg]
							// pitch offset moves Kinect mechanism
  var _Kinect_FaceTrackingEnable	= true;		// true or false, due to significant CPU consumption, anytime you can pause/resume...
  var _Kinect_InteractionEnable		= false;	// true or false
  var _Kinect_DepthNearMode		= true;		// false - OFF, true - ON (avilable with Kinect for Windows only)
  var _Kinect_SkeletonTrackingMode 	= 0; 		// Possible options: 	0 - full body, 1 - upper body (seat mode),
  var _Kinect_SkeletonChooserMode	= 5;		// Possible options: 
							// 0 - default (new skeleton gives new tracking candidate),
							// 1 - track the closest skeleton,
							// 2 - track two closest skeletons,
							// 3 - track the one skeleton and keep it,
							// 4 - track two skeletons and keep them,
							// 5 - track the most active skeleton,
							// 6 - track two most active skeletons,
  //
  ////////////////////////////////////////////////////////
  // DETECTORS MODULES
  // choose sources of detectors and their parameters
  var _ObjectDetector_source	= "kinect";			// Possible source:	"kinect" or "camera"
  var _ObjectDetector_multi	= false;			// Possible mode
								// false - detect only one face (nearest)
								// true - detect many faces
  var _Color1Detector_color	= [0,10,160,255,140,255];	// Set color value [H_min, H_max, S_min, S_max, V_min, V_max] (red)
  var _Color1Detector_source	= "kinect";			// Possible source:	"kinect" or "camera"
  var _Color2Detector_color	= [75,132,160,255,80,255];	// Set color value [H_min, H_max, S_min, S_max, V_min, V_max] (green)
  var _Color2Detector_source	= "kinect";			// Possible source: 	"kinect" or "camera"
  var _Color3Detector_color	= [150,170,160,255,140,255];	// Set color value [H_min, H_max, S_min, S_max, V_min, V_max] (blue)
  var _Color3Detector_source	= "kinect";			// Possible source: 	"kinect" or "camera"
  var _Color4Detector_color	= [30,43,240,255,180,255];	// Set color value [H_min, H_max, S_min, S_max, V_min, V_max] (yellow)
  var _Color4Detector_source	= "kinect";			// Possible source: 	"kinect" or "camera"
  var _MoveDetector_source	= "kinect";			// Possible source:	"kinect" or "camera"
  var _MoveDetector_frameBuffer	= 4;				// Number of cyclic frame buffer used for motion detection (depend on FPS)
  var _MoveDetector_duration	= 0.4;				// Time window for analysis (in seconds)
  var _MoveDetector_smooth	= 21;				// Region smooth filter parameter (default 31) 
								// ATTENTION! it must be odd value. 
								// Set smaller value for small image (higher scale)
  var _FacetDetector_source	= "kinect";			// Possible source "kinect" or "camera"
  //
  ////////////////////////////////////////////////////////
  //
  //	P L A T F O R M   C O N F I G U R A T I O N
  //
  ////////////////////////////////////////////////////////
   // ENABLE MODULES
  var _En_UAria			= true;		// use ARIA navigation system (if enable configure ARIA navigation settings below)
   //
   ////////////////////////////////////////////////////////
   // PLAYER NAVIGATION SETTINGS
  var _navigationPort		= "6665";  	// Navigation client port
   //
   ////////////////////////////////////////////////////////
   // ARIA NAVIGATION SETTINGS
  var _En_ARIA_Sonars 		= false;	// enable sonars array (true - on, false - off)
  var _En_ARIA_Laser 		= true;		// enable laser device (true - on, false - off) 	
  var _ARIA_LaserType 		= "urg2.0";	// Laser type. Possible types:"lms1xx","lms2xx","urg","urg2.0"	
  var _ARIA_LaserStart 		= -70;		// Start angle laser scan
  var _ARIA_LaserEnd 		= 70;		// End angle laser scan
  var _ARIA_Flipped 		= 0;		// Laser is 1 - flipped, 0 - not flipped
  // 
  // Set port names
  var _com_robot = "COM1";			// robot serial port name 
  var _com_laser = "COM3";			// laser serial port name 
  //
  var _ARIA_LaserStartingBaud 	= "115200";	// Laser serial port baudrate	
  //
  ////////////////////////////////////////////////////////
  //
  //	S C R E E N   C O N F I G U R A T I O N
  //
  //////////////////////////////////////////////////////// 
  //
  var _En_UImageToolScreen		= true;		// image tool, internal use
  var _En_UImageDisplayScreen		= true;		// image display module to show image in the simple window
  //   
  var _Screen_ResolutionX		= 800;
  var _Screen_ResolutionY		= 480; 
  // 
  var _Screen_InterpolationMethod	= 0; 		// 0 - a nearest-neighbor interpolation,
							// 1 - a bilinear interpolation (used by default),
							// 2 - resampling using pixel area relation,
							// 3 - a bicubic interpolation over 4x4 pixel neighborhood,
							// 4 - a Lanczos interpolation over 8x8 pixel neighborhood.
  //
  // IMAGE DISPLAY SETTINGS
  var _ImageDisplayWindow		= "main";	// title of image window
  //
  ////////////////////////////////////////////////////////
  //
  //	I O   C O N F I G U R A T I O N
  //
  //////////////////////////////////////////////////////// 
  //
  var _En_UTextToolIO			= true; 	// enable text tool module to read/write files
  var _En_USerial			= true;		// enable serial communication module
  var _En_URfid				= false;	// enable RFID reader module
  //
  ////////////////////////////////////////////////////////
  //
  //	E M Y S   C O N F I G U R A T I O N
  //
  //////////////////////////////////////////////////////// 
  // ENABLE MODULES
  var _En_DynamixelHead		= true;		// enable Dynamixel servos module for head
  var _Dyn_FindServosHead	= false;  	// Possible modes: true or false  
						// true - check all servos aviability
    						// false - add servos without aviability checking (faster)
  // Set port name
  var _com_head = "COM5";			// head serial port name
  //
  //		 __________
  //	       /     s1     \ 
  //	      /______q5______\
  //	     ________| |_______
  //	   /   _q10	    _q7 \
  //	s4| q9(O)    s3    (O)q6 |s2
  //	   \__q11___________q8__/
  //	      _______| |______
  //	      \      q4      /
  //	       \_____s5_____/
  //		     |0| q3 - head pitch 
  //		     (o) q2 - neck yaw
  //		     | |
  //		     | |    
  //   q1 (slave) O)=| |=(O q1 (master) - neck pitch
  //
  // Joints: [q1-slave (neckPitch), q1-master (neckPitch), q2 (headYaw), g3 (headPitch), q4 (downDisc), q5 (upDisc), 
  // 	      q6 (leftEyeLid), q7 (leftEyeBrow), q8 (leftEyeTrans), q9 (rightEyeLid), q10 (rightEyeBrow), q11 (rightEyeTrans)
  //	      s1 (top), s2 (left), s3 (front), s4 (right), s5 (bottom)]
  //
  // Head components IDs (motors and touch sensors) 
  var _Head_IDs			= [ 11, 10, 9, 8, 7, 6,
				    2, 3, 4, 1, 0, 5];
  // Head zero positions [deg/mm]
  // 				[neckPitch, headYaw, headPitch, downDisc, upDisc, 
  //				leftEyeLid, leftEyeBrow, leftEyeTrans, rightEyeLid, rightEyeBrow, rightEyeTrans]
  var _Head_ZeroPosition	= [187, 180, 170, 178, 179, 
				   145, 95, 0, 145, 100, 0];
  //
  // Drivers ratios for translating Dynamixel units to deg/mm
  var _Head_DynamixelRatio = 0.087912;
  var _Head_HitecRatio = 0.23;
  var _Head_TransRatio = 0.1;
  //
  ////////////////////////////////////////////////////////
  //
  //	A R M S   C O N F I G U R A T I O N
  //
  ////////////////////////////////////////////////////////
  // ENABLE MODULES 
  var _En_DynamixelArms		= true;		// enable Dynamixel servos module for arms
  var _Dyn_FindServosArms	= false;  	// Possible modes: true or false  
						// true - check all servos aviability,
    						// false - add servos without aviability checking (faster)
  // Ser port name
  var _com_arms	= "COM5";			// arms serial port name
  //
  //				    R	 PR	 PR 	 // R - roll, P - pitch
  //				   =()==(O()====(O()===
  //				    q1, q2, q3, q4, q5
  var _Arms_IDs			= [ 31, 30, 33, 32, 35,   // left
				    38, 39, 36, 37, 34];  // right
  //
  // Arms zero positions [deg]
  //				   q1, q2, q3, q4, q5
  var _Arms_ZeroPositions	= [ 5,  0,  0,  0,  0,   // left
				    0,  0,  0,  0,  0];  // right	
  //
  // Ratio for servos units to deg
  var _Arms_Ratio 	= 0.28;	
  var _Arms_MaxSpeed 	= 100;			// [deg/s] set the maximum arms movement speed
						// 0 means MAX joint speed
  //  
  ////////////////////////////////////////////////////////
  //
  //	H A N D S   C O N F I G U R A T I O N
  //
  ////////////////////////////////////////////////////////
  // ENABLE MODULES
  var _En_DynamixelHands	= true;		// enable Dynamixel servos module for hands
  var _Dyn_FindServosHands	= false;  	// Possible modes: true or false  
						// true - check all servos aviability,
    						// false - add servos without aviability checking (faster)
  // Set port names
  var _com_Lhands 		= "COM6";	// left hand serial port name
  var _com_Rhands 		= "COM7";	// right hand serial port name
  //
  //
  // Hand IDs 
  /* 
  LEFT
	      f1   f2   f3	
	      |    |    |	
	      0    0    0 coupled with q1	
	      |    |    |	
	  q1  0    0    0	
	      |    |    |	
	  q2  0    0    0	
	  q3 (o)  (o)  (o)	
	       \   |   /	
		\__|__/		
     f4 --o--o(o)_____ 
	  q1 q2q3 | |
		  |^| q_y	
		  (0) q_p		
		  
		  
  RIGHT
	      f3   f2   f1	
	      |    |    |
	      0    0    0 coupled with q1	
	      |    |    | 	
	  q1  0    0    0		
	      |    |    |	 
	  q2  0    0    0	
	  q3 (o)  (o)  (o) 	
	       \   |   /		
		\__|__/			
		 _____(o)o--o-- f4	
		  | | q3jq2 q1	
	      q_y |^|	
	      q_p (0) 		
					
 */
  //				    q1, q2, q3
  var _Hands_LIDs		= [ 54, 59, 57, // f1
				    56, 51, 61, // f2
				    58, 55, 53, // f3
				    52, 50, 60, // f4
				    62, 63];	// wrist yaw, wrist pitch
  //
  //				    q1, q2, q3
  var _Hands_RIDs		= [ 74, 79, 77, // f1
				    76, 71, 81, // f2
				    78, 75, 73, // f3
				    72, 70, 80, // f4
				    82, 83];	// wrist yaw, wrist pitch
				    
  // Hand zero positions
  //				    q1, q2, q3
  var _Hands_LZeroPosition	= [ 0,  0, 70, // f1
				    0,  0, 70, // f2
				    0,  0, 70, // f3
				    0,  0,  0, // f4
				    220, 100]; // wrist yaw, wrist pitch
  //
  //				    q1, q2, q3
  var _Hands_RZeroPosition	= [ 0,  0, 70, // f1
				    0,  0, 70, // f2
				    0,  0, 70, // f3
				    0,  0,  0, // f4
				    220, 210]; // wrist yaw, wrist pitch
  // Ratios for servos units to deg
  var _Hands_Finger_Ratio 	= 0.1;
  var _Hands_Wrist_Ratio 	= 0.087912;
  //
  ////////////////////////////////////////////////////////
  //
  // 	(ML) M A C H I N E   L E A R N I N G   
  //
  ////////////////////////////////////////////////////////
  // ENABLE MODULES
  var _En_UKNearestML 		= true; 	// enable K nearest algorithm module
  var _En_UEigenfaces 		= true; 	// enable eigenfaces algorithm module
  //
  ////////////////////////////////////////////////////////
  //
  // 	 N E T W O R K     
  //
  ////////////////////////////////////////////////////////
  // ENABLE MODULES
  var _En_UBrowser 		= true; 	// enable http browser
  var _En_UMail 		= false; 	// enable mail module
  var _En_UFacebook 		= false; 	// enable facebook module
  var _En_UGCalendar		= false; 	// enable Google Calendar module
  var _En_UTextToolNetwork	= true; 	// enable text tool module, it helps to 
						// remove html markups or get rid of 
						// text encoding mess
  var _En_UPhilipsHue		= false;	// enable control of Philips Hue lighting system
  //
  ////////////////////////////////////////////////////////
  // MAIL SETTINGS
  var _Mail_module		= "UMail_CURL";			// Set module type, possible options: "UMail_POCO", "UMail_CURL"
  var _Mail_SmtpAddr 		= "smtp://smtp.gmail.com"; 	// SMTP address
  var _Mail_SmtpPort		= 587;				// SMTP port
  var _Mail_ImapAddr		= "imaps://imap.gmail.com";	// IMAP address
  var _Mail_ImapPort		= 993;				// IMAP port
  var _Mail_PopAddr		= "pop.gmail.com";		// POP3 address
  var _Mail_PopPort		= 995;				// POP3 port
  //
  ////////////////////////////////////////////////////////
  // FACEBOOK SETTINGS
  var _Facebook_Locale 	   	= "en_US"; 		// set Facebook locale to receive all messages in your language
  var _Facebook_Main_Album_Name	= "Timeline Photos"; 	// set default photo album name
  //
  ////////////////////////////////////////////////////////
  // GOOGLE (CALENDAR+CONTACTS) SETTINGS
  var _GCalendar_Calendar_Name 	   = "Calendar name"; 	// set user calendar name
  // Google Contacts
  var _GCalendar_Contact_GroupName = "Group name"; 	// set user contact list
  //
  ///////////////////////////////////////////////////////
  // WEATHER SETTINGS
  // set location (WOEID number) for weather forecast
  var _Weather_location		= "12591161"; //Wroclaw	// set location (WOEID number) for weather forecast
  var _Weather_scale		= "f";			// set C/F temperature units
  //
  ////////////////////////////////////////////////////////
  //
  // 	 A P P R A I S A L    
  //
  ////////////////////////////////////////////////////////
  // ENABLE MODULES
  var _En_UWordNet 		= true; 	// enable WordNet
  var _En_USentiWordNet 	= true; 	// enable SentiWordNet
  var _En_UAnew 		= true; 	// enable Anew
  // 
  ////////////////////////////////////////////////////////
  //
  // 	 E M O T I O N S
  //
  ////////////////////////////////////////////////////////
  // ENABLE MODULES
  var _En_UPAD 			= false; 	// enable PAD emotion model
  var _En_UKNearestEmot		= false; 	// enable K nearest algorithm for emotion classify
  var _En_UWASABI		= true; 	// enable UWASABI module
  // 
  var _WASABI_RobotPersonality	= "EMYS";	// robot personality file name
  //
  ////////////////////////////////////////////////////////
  //
  //	R E M O T E
  //
  ////////////////////////////////////////////////////////
  // ENABLE MODULES
  var _En_UJoystick	 	= false;	// enable joystick module to remote control
  var _En_UKeyboard	 	= false;	// enable joystick module to remote control
  //
  ////////////////////////////////////////////////////////
  // JOYSTICK SETTINGS
  var _Joystick_ActionFile 	= ""; 		// Set the file name of your joystick configuration.
  //
  ////////////////////////////////////////////////////////
  // KEYBOARD SETTINGS
  var _Keyboard_ActionFile 	= "MyKeys.u"; 	// Set the file name of your keyboard configuration.
  //
  ////////////////////////////////////////////////////////
  //
  //	 C O M P E T E N C Y  L A Y E R   F I L E S
  //
  ////////////////////////////////////////////////////////
  // Start up file:
  // load your own uFiles ["file1.u","file2.u"], set [] if not
  //
  var _CompetencyManagerFiles 	= ["Simple_EMYS_with_Kinect.u","EmysDialogs.u","EmysBehaviours.u", "StoryTellerData.u"];
  //
  ////////////////////////////////////////////////////////
  //
  //	 F S M   F I L E 
  //
  ////////////////////////////////////////////////////////
  // Start up file:
  // load your own FSM "fsm.u", set "" if not
  //
  var _FSMFile 	= "";
  //  
  ////////////////////////////////////////////////////////
  //
  // 	S Y S T E M   P A T H S
  //
  ////////////////////////////////////////////////////////
  // Set the paths to all robot urbi files 
  var _uObjectsDir = "";				// path to UObjects place
  var _uFilesDir = "../urbi_scripts/"; 			// path to all urbi scripts directory
  //
  // Passwords
  var _loginPasswordDir	= _uFilesDir+"passwords.txt";	// path to the all login passwords
  //
  ////////////////////////////////////////////////////////
  //
  // 	M O D U L E   N A M E S - DO NOT MODIFY THIS SECTION!!!
  // 
  ////////////////////////////////////////////////////////
  var _UObjN_UAnew		= "UAnew";
  var _UObjN_UARIA		= "UAria";
  var _UObjN_UBrowser		= "UBrowser";
  var _UObjN_UCamera		= "UCamera";
  var _UObjN_UColorDetection	= "UColorDetection";
  var _UObjN_UDynamixel		= "Dynamixel";
  var _UObjN_UEigenfaces	= "UEigenfaces";
  var _UObjN_UFacebook		= "UFacebook";
  var _UObjN_UFacet		= "UFacet";
  var _UObjN_UGCalendar		= "UGCalendar";
  var _UObjN_UImageDisplay	= "UImageDisplay";
  var _UObjN_UImageTool		= "UImageTool";
  var _UObjN_UJoystick		= "UJoystick";
  var _UObjN_UKeyboard		= "UKeyboard";
  var _UObjN_UKinect		= "UKinect";
  var _UObjN_UKNearest		= "uknearest";
  var _UObjN_UMail_CURL		= "UMail_CURL";
  var _UObjN_UMail_POCO		= "UMail_POCO";
  var _UObjN_UMoveDetection	= "UMoveDetection";
  var _UObjN_UMP3		= "UMP3";
  var _UObjN_UObjectDetector	= "UObjectDetection";
  var _UObjN_UPAD		= "UPAD";
  var _UObjN_UPhilipsHue	= "UPhilipsHue";
  var _UObjN_UPlayer		= "UPlayer";
  var _UObjN_UPlayerNext	= "UPlayerNext";
  var _UObjN_URecog_MSP		= "URecog_MSP";
  var _UObjN_URecog_SAPI	= "URecog_SAPI";
  var _UObjN_URfid		= "URfid";
  var _UObjN_USentiWordNet	= "USentiWordNet";
  var _UObjN_USerial		= "USerial";
  var _UObjN_USpeech_MSP	= "USpeech_MSP";
  var _UObjN_USpeech_SAPI	= "USpeech_SAPI";
  var _UObjN_UTextTool		= "UTextTool";
  var _UObjN_UWASABI		= "UWASABI";
  var _UObjN_UWordNet		= "UWordNet";
  //
}|{};
